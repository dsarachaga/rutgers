lines(coefs.plot$year,coefs.plot$fit)
plot(coefs.plot$year,coefs.plot$rd_budget_frac) %>%
lines(coefs.plot$year,coefs.plot$lower, col="blue", lty=2) %>%
lines(coefs.plot$year,coefs.plot$upper, col="blue", lty=2)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
library(tidyverse)
ggplot(coefs, aes(x = estimate, y = teamID)) + geom_point() +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +
geom_vline(xintercept = 0, color = "red")
augment(gap.fit) %>% ggplot(aes(.fitted, .resid)) + geom_point()
augment(gap.fit) %>% ggplot(aes(sample = .resid)) + geom_qq() + geom_qq_line()
tidy(fit)
augment(fit) %>% ggplot(aes(.fitted, year)) + geom_point() + geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +
augment(fit) %>% ggplot(aes(sample = .resid)) + geom_qq() + geom_qq_line()
augment(fit) %>% ggplot(aes(.fitted, year)) + geom_point() + geom_errorbarh(aes(xmin = conf.low, xmax = conf.high))
coefs.plot %>% ggplot(aes(fit, year)) + geom_point() + geom_errorbarh(aes(xmin = lower, xmax = upper))
coefs.plot %>% ggplot(aes(coefs.plot, year)) + geom_point() + geom_errorbarh(aes(xmin = lower, xmax = upper))
coefs.plot %>% ggplot(aes(fit, year)) + geom_point() + geom_errorbarh(aes(xmin = lower, xmax = upper))
tidy(fit)
coefs.plot %>% ggplot(aes(rd_budget_frac, year)) +
lines(coefs.plot$year,coefs.plot$fit) +
+ geom_point() + geom_errorbarh(aes(xmin = lower, xmax = upper))
coefs.plot %>% ggplot(aes(rd_budget_frac, year)) +
lines(coefs.plot$year,coefs.plot$fit) +
geom_point() + geom_errorbarh(aes(xmin = lower, xmax = upper))
coefs.plot %>% ggplot(aes(rd_budget_frac, year))
coefs.plot %>% ggplot(aes(rd_budget_frac, year)) +
lines(coefs.plot$year,coefs.plot$fit)
coefs.plot %>% ggplot(aes(rd_budget_frac, year)) +
geom_point() + geom_errorbarh(aes(xmin = lower, xmax = upper))
regressions %>% filter(term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, color = factor(am))) +
geom_point() + geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +
geom_vline(xintercept = 0)
coefs.plot %>%
ggplot(aes(x = fit, y = year, color = factor(am))) +
geom_point() + geom_errorbarh(aes(xmin = lower, xmax = upper)) +
geom_vline(xintercept = 0)
plot(coefs.plot$year,coefs.plot$rd_budget_frac) %>%
lines(coefs.plot$year,coefs.plot$fit) %>%
lines(coefs.plot$year,coefs.plot$lower, col="blue", lty=2) %>%
lines(coefs.plot$year,coefs.plot$upper, col="blue", lty=2)
gapminder %>% group_by(year) %>% do(tidy(lm(lifeExp ~ log10(gdpPercap), data = .), conf.int = TRUE)) %>% filter(term == "log10(gdpPercap)") %>% ggplot(aes(x = estimate, y = year)) +
geom_point() + geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +
geom_vline(xintercept = 0)
augment(gap.fit) %>% ggplot(aes(.fitted, .resid)) + geom_point()
augment(gap.fit) %>% ggplot(aes(sample = .resid)) + geom_qq() + geom_qq_line()
glance(gap.fit)
# part b)
coefs <- fed_rd.new %>% ungroup() %>%
filter(department %in% c("NASA", "NSF", "DHS", "DOD"))
# part a)
fed_rd.new <- fed_rd %>%
mutate(rd_budget_frac = rd_budget/total_outlays)
fit <- lm(rd_budget_frac ~ department + year, fed_rd.new)
summary(fit)
conf.int <- augment(fit) %>%
mutate(fit = .fitted) %>%
mutate(upper = .fitted + 1.96 * .se.fit) %>%
mutate(lower = .fitted + 1.96 * .se.fit) %>%
select(rd_budget_frac, department, year, fit, upper, lower)
fed_rd.new <- fed_rd.new %>%
left_join(.,conf.int)
# part b)
coefs <- fed_rd.new %>% ungroup() %>%
filter(department %in% c("NASA", "NSF", "DHS", "DOD"))
ploting <- function(department){
coefs.plot <- coefs %>%
filter(department == "NASA")
plot(coefs.plot$year,coefs.plot$rd_budget_frac) %>%
lines(coefs.plot$year,coefs.plot$fit) %>%
lines(coefs.plot$year,coefs.plot$lower, col="blue", lty=2) %>%
lines(coefs.plot$year,coefs.plot$upper, col="blue", lty=2)
}
paste("The department wise plots are as shown below")
ploting("NASA")
ploting("NSF")
ploting("DHS")
ploting("DOD")
plot(coefs.plot$year,coefs.plot$rd_budget_frac) %>%
lines(coefs.plot$year,coefs.plot$fit) %>%
lines(coefs.plot$year,coefs.plot$lower, col="blue", lty=2) %>%
lines(coefs.plot$year,coefs.plot$upper, col="blue", lty=2)
plot(coefs.plot$year,coefs.plot$rd_budget_frac) %>%
lines(coefs.plot$year,coefs.plot$fit)
plot(coefs.plot$year,coefs.plot$rd_budget_frac) %>%
lines(coefs.plot$year,coefs.plot$lower, col="blue", lty=2) %>%
lines(coefs.plot$year,coefs.plot$upper, col="blue", lty=2)
plot(coefs.plot$year,coefs.plot$rd_budget_frac) %>%
lines(coefs.plot$year,coefs.plot$fit) %>%
lines(coefs.plot$year,coefs.plot$lower, col="blue", lty=2) %>%
lines(coefs.plot$year,coefs.plot$upper, col="blue", lty=2)
ggplot(coefs.plot, aes(x = rd_budget_frac, y = department)) + geom_point() +
geom_errorbarh(aes(xmin = lower, xmax = upper)) +
geom_vline(xintercept = 0, color = "red")
ggplot(coefs, aes(x = estimate, y = teamID)) + geom_point() +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +
geom_vline(xintercept = 0, color = "red")
coefs <- team_regressions %>% ungroup() %>%
filter(term == "average") %>%
mutate(teamID = reorder(teamID, estimate))
team_regressions <- merged %>% group_by(teamID) %>%
do(tidy(lm(log10(salary) ~ average + yearID, .), conf.int = TRUE))
augment(gap.fit) %>% ggplot(aes(.fitted, .resid)) + geom_point()
augment(gap.fit) %>% ggplot(aes(sample = .resid)) + geom_qq() + geom_qq_line()
coefs.plot %>% ggplot(aes(sample = fit))
coefs.plot %>% ggplot(aes(sample = fit))
coefs.plot %>% ggplot(aes(sample = fit)) %>%
lines(coefs.plot$year,coefs.plot$fit) %>%
lines(coefs.plot$year,coefs.plot$lower, col="blue", lty=2) %>%
lines(coefs.plot$year,coefs.plot$upper, col="blue", lty=2)
coefs.plot <- coefs %>%
filter(department == "NASA")
ggplot(coefs.plot, aes(x=year, y=rd_budget_frac))+
geom_point()+
geom_smooth(method=lm, se=TRUE)
ggplot(coefs.plot, aes(x=year, y=rd_budget_frac))+
geom_point()+
geom_line(aes(y=lower), color = "red", linetype = "dashed")+
geom_line(aes(y=upper), color = "red", linetype = "dashed")+
geom_smooth(method=lm, se=TRUE)
ploting("NASA")
ploting <- function(department){
coefs.plot <- coefs %>%
filter(department == department)
ggplot(coefs.plot, aes(x=year, y=rd_budget_frac))+
geom_point()+
geom_line(aes(y=lower), color = "red", linetype = "dashed")+
geom_line(aes(y=upper), color = "red", linetype = "dashed")+
geom_smooth(method=lm, se=TRUE)
}
ploting("NASA")
ploting("NSF")
ploting("DHS")
ploting("DOD")
ploting <- function(department){
coefs.plot=coefs[which(coefs$department==department),]
ggplot(coefs.plot, aes(x=year, y=rd_budget_frac))+
geom_point()+
geom_line(aes(y=lower), color = "red", linetype = "dashed")+
geom_line(aes(y=upper), color = "red", linetype = "dashed")+
geom_smooth(method=lm, se=TRUE)
}
ploting("NASA")
ploting("NSF")
ploting("DHS")
ploting("DOD")
coefs
fed_rd.new
ploting <- function(department){
coefs.plot=fed_rd.new[which(coefs$department==department),]
ggplot(coefs.plot, aes(x=year, y=rd_budget_frac))+
geom_point()+
geom_line(aes(y=lower), color = "red", linetype = "dashed")+
geom_line(aes(y=upper), color = "red", linetype = "dashed")+
geom_smooth(method=lm, se=TRUE)
}
ploting("NASA")
ploting("NSF")
ploting("DHS")
ploting("DOD")
ploting <- function(department){
coefs.plot=fed_rd.new[which(fed_rd.new$department==department),]
ggplot(coefs.plot, aes(x=year, y=rd_budget_frac))+
geom_point()+
geom_line(aes(y=lower), color = "red", linetype = "dashed")+
geom_line(aes(y=upper), color = "red", linetype = "dashed")+
geom_smooth(method=lm, se=TRUE)
}
ploting("NASA")
ploting("NSF")
ploting("DHS")
ploting("DOD")
# Exercise 2
fed_rd <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-02-12/fed_r_d_spending.csv")
# part a)
fed_rd.new <- fed_rd %>%
mutate(rd_budget_frac = rd_budget/total_outlays)
fit <- lm(rd_budget_frac ~ department + year, fed_rd.new)
conf.int <- augment(fit) %>%
mutate(fit = .fitted) %>%
mutate(upper = .fitted + 1.96 * .se.fit) %>%
mutate(lower = .fitted + 1.96 * .se.fit) %>%
select(rd_budget_frac, department, year, fit, upper, lower)
fed_rd.new <- fed_rd.new %>%
left_join(.,conf.int) %>%
select(distinct())
fed_rd.new <- select(distinct(fed_rd.new %>%
left_join(.,conf.int)))
# part b)
ploting <- function(department){
coefs.plot=fed_rd.new[which(fed_rd.new$department==department),]
ggplot(coefs.plot, aes(year, rd_budget_frac))+
geom_point()+
geom_line(aes(y=lower), color = "red", linetype = "dashed")+
geom_line(aes(y=upper), color = "red", linetype = "dashed")+
geom_smooth(method=lm, se=TRUE)
}
paste("The department wise plots are as shown below")
ploting("NASA")
# part a)
fed_rd.new <- fed_rd %>%
mutate(rd_budget_frac = rd_budget/total_outlays)
fit <- lm(rd_budget_frac ~ department + year, fed_rd.new)
conf.int <- augment(fit) %>%
mutate(fit = .fitted) %>%
mutate(upper = .fitted + 1.96 * .se.fit) %>%
mutate(lower = .fitted + 1.96 * .se.fit) %>%
select(rd_budget_frac, department, year, fit, upper, lower)
fed_rd.new <- select(distinct(fed_rd.new %>%
left_join(.,conf.int)))
fed_rd.new
fed_rd.new
fed_rd.new <- fed_rd.new %>%
left_join(.,conf.int)
# part a)
fed_rd.new <- fed_rd %>%
mutate(rd_budget_frac = rd_budget/total_outlays)
fit <- lm(rd_budget_frac ~ department + year, fed_rd.new)
conf.int <- augment(fit) %>%
mutate(fit = .fitted) %>%
mutate(upper = .fitted + 1.96 * .se.fit) %>%
mutate(lower = .fitted + 1.96 * .se.fit) %>%
select(rd_budget_frac, department, year, fit, upper, lower)
fed_rd.new <- fed_rd.new %>%
left_join(.,conf.int)
fed_rd.new
fed_rd.new <- fed_rd.new %>%
left_join(.,conf.int)
# part a)
fed_rd.new <- fed_rd %>%
mutate(rd_budget_frac = rd_budget/total_outlays)
fit <- lm(rd_budget_frac ~ department + year, fed_rd.new)
conf.int <- augment(fit) %>%
mutate(fit = .fitted) %>%
mutate(upper = .fitted + 1.96 * .se.fit) %>%
mutate(lower = .fitted + 1.96 * .se.fit) %>%
select(rd_budget_frac, department, year, fit, upper, lower)
fed_rd.new <- fed_rd.new %>%
left_join(.,conf.int)
# part b)
ploting <- function(department){
coefs.plot=fed_rd.new[which(fed_rd.new$department==department),]
ggplot(coefs.plot, aes(year, rd_budget_frac))+
geom_point()+
geom_line(aes(y=lower), color = "red", linetype = "dashed")+
geom_line(aes(y=upper), color = "red", linetype = "dashed")+
geom_smooth(method=lm, se=TRUE)
}
paste("The department wise plots are as shown below")
ploting("NASA")
ploting("NSF")
ploting("DHS")
ploting("DOD")
# exercise 3
# part a)
pwd()
# exercise 3
# part a)
pwd
# exercise 3
# part a)
ls
# exercise 3
# part a)
getwd()
?read_excel()
read_excel("UN_MigrantStockByOriginAndDestination_2015.xlsx", sheet = 16)
library(tidyverse)
read_excel("UN_MigrantStockByOriginAndDestination_2015.xlsx", sheet = 16)
temp1 <- read_csv("https://raw.githubusercontent.com/jennybc/lotr-tidy/master/data/The_Fellowship_Of_The_Ring.csv")
read_excel("UN_MigrantStockByOriginAndDestination_2015.xlsx", sheet = 16)
readxl::read_excel("UN_MigrantStockByOriginAndDestination_2015.xlsx", sheet = 16)
untidy_migrant <- readxl::read_excel("UN_MigrantStockByOriginAndDestination_2015.xlsx", sheet = 16)
untidy_migrant
untidy_migrant <- readxl::read_excel("UN_MigrantStockByOriginAndDestination_2015.xlsx", sheet = "Table 16")
untidy_migrant
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
library(tidyverse)
untidy_babynames <- read_delim("untidy-babynames.txt", " ")
untidy_flights <- read_table("untidy-flights.txt")
untidy_flights2 <- read_table("untidy-flights-sc.txt")
untidy_flights
untidy_flights %>% spread(key = delay_type, value = delay)
untidy_flights %>% spread(key = delay_type, value = delay)
head(untidy_migrant)
untidy_migrant <- tidyxl::read_excel("UN_MigrantStockByOriginAndDestination_2015.xlsx", sheet = "Table 16")
library(tidyverse)
untidy_migrant <- tidyxl::read_excel("UN_MigrantStockByOriginAndDestination_2015.xlsx", sheet = "Table 16")
library('dplyr')
library(dplyr):
library(gutenbergr)
temp1 <- read_csv("https://raw.githubusercontent.com/jennybc/lotr-tidy/master/data/The_Fellowship_Of_The_Ring.csv")
temp2 <- read_csv("https://raw.githubusercontent.com/jennybc/lotr-tidy/master/data/The_Two_Towers.csv")
temp3 <- read_csv("https://raw.githubusercontent.com/jennybc/lotr-tidy/master/data/The_Return_Of_The_King.csv")
lotr <- bind_rows(temp1, temp2, temp3)
lotr
untidy_babynames
untidy_babynames
gather(untidy_babynames, `2000`:`2005`, key = "year", value = "count")
untidy_babynames
gather(untidy_babynames, `2000`:`2005`, key = "year", value = "count")
untidy_babynames
tidy_babynames <-
gather(untidy_babynames, `2000`:`2005`, key = "year", value = "count")
spread(tidy_babynames, key = year, value = count)
gather(untidy_migrant, `9`:)
head(untidy_migrant)
untidy_migrant[:6,]
untidy_migrant[,6:]
untidy_migrant[-6,]
untidy_migrant[-16,]
untidy_migrant[-10,]
untidy_migrant[-20,]
untidy_migrant <- readxl::read_excel("UN_MigrantStockByOriginAndDestination_2015.xlsx", sheet = "Table 16", skip = 15)
untidy_migrant
head(untidy_migrant)
setnames(untidy_migrant, old=c("X__2"), new=c("to_country"))
untidy_migrant %>%
untidy_migrant %>%
mutate(to_country = X__2)
untidy_migrant %>%
mutate(to_country = X__2)
untidy_migrant <- untidy_migrant %>%
mutate(to_country = X__2)
untidy_migrant
untidy_migrant <- untidy_migrant %>%
rename(to_country = X__2)
untidy_migrant
untidy_migrant <- readxl::read_excel("UN_MigrantStockByOriginAndDestination_2015.xlsx", sheet = "Table 16", skip = 15)
head(untidy_migrant)
untidy_migrant <- untidy_migrant %>%
rename(to_country = X__2)
untidy_migrant <- untidy_migrant %>%
rename(country_code = X__4)
untidy_migrant
head(untidy_migrant)
migrate_to_canada <- untidy_migrant[which(untidy_migrant$to_country == "Canada"),]
migrate_to_canada
migrate_to_canada <- migrate_to_canada %>% gather(`Afghanistan`:`Zimbabwe`, key = "from_country", value = "count")
head(migrate_to_canada)
migrate_to_canada %>%
arrange(desc(count)) %>%
head(5)
# part b)
migrate_from_canada <- untidy_migrant[which(untidy_migrant$from_country == "Canada"),]
migrate_from_canada
# part b)
migrate_from_canada <- untidy_migrant[which(untidy_migrant$from_country == "Canada"),]
migrate_from_canada <- migrate_from_canada %>% gather(`Afghanistan`:`Zimbabwe`, key = "to_country", value = "count")
migrate_from_canada
head(migrate_from_canada)
untidy_migrant[which(untidy_migrant$from_country == "Canada"),]
untidy_migrant
#(Excluding the rows with "SUB-headings(filtering for Country_code<900)" and then sorting in descending order
FromCanada <- untidy_migrant %>%filter(Country_code < 900)
#(Excluding the rows with "SUB-headings(filtering for Country_code<900)" and then sorting in descending order
FromCanada <- untidy_migrant %>%filter(country_code < 900)
FromCanada
head(arrange(FromCanada, desc(Canada)), n = 5)$ToCountry
head(arrange(FromCanada, desc(Canada)), n = 5)$to_country
untidy_migrant
# I exclude the country codes from the agrupations, that is those higher or equal than 900
migrate_from_canada <- untidy_migrant %>%filter(country_code < 900)
head(arrange(migrate_from_canada, desc(Canada)), n = 5)$to_country
migrate_from_canada %>%
arrange(desc(Canada)) %>%
head(5)
# I exclude the country codes from the agrupations, that is those higher or equal than 900
migrate_from_canada <- untidy_migrant %>%filter(country_code < 900)
migrate_from_canada %>%
arrange(desc(Canada)) %>%
head(5)
migrate_from_canada$to_country %>%
arrange(desc(Canada)) %>%
head(5)
migrate_from_canada %>%
arrange(desc(Canada)) %>%
head(5)$to_country
head(arrange(migrate_from_canada, desc(Canada)), n = 5)$to_country
# part c)
Migration_pairs <- untidy_migrant %>%
filter(country_code < 900) %>%
gather(`Afghanistan`:`Zimbabwe`, key = "from_country", value = "count") %>% arrange(desc(count))
# part c)
migration_pairs <- untidy_migrant %>%
filter(country_code < 900) %>%
gather(`Afghanistan`:`Zimbabwe`, key = "from_country", value = "count") %>% arrange(desc(count))
#Excluding the unnecessary columns
drops <- c("Total","Other North", "Other South", "Country_code", "..1", "..3", "..5")
#Excluding the unnecessary columns
drop_columns <- c("Total","Other North", "Other South", "Country_code", "..1", "..3", "..5")
pairs_top_10 <- migration_pairs[ , !(names(migration_pairs) %in% drop_columns)]
head(pairs_top_10, 10)
select(head(pairs_top_10, 10)$to_country, head(pairs_top_10, 10)$from_country)
head(pairs_top_10, 10)$to_country, head(pairs_top_10, 10)$from_country
head(pairs_top_10, 10)$to_country
head(pairs_top_10, 10)$from_country
paste(head(pairs_top_10, 10)$to_country, head(pairs_top_10, 10)$from_country)
pairs_top_10 %>%
select(to_country, from_country)
pairs_top_10 %>%
select(to_country, from_country) %>%
head(10)
books %>% distinct(title)
library(tidyverse)
library(lubridate)
library(magrittr)
library(Lahman)
library(babynames)
library(kableExtra)
library(printr)
library(tidytext)
library(wordcloud)
library(dplyr)
great_expectations <- books %>%
filter(title == 'Great Expectations')
great_expectations.tbl <-
tibble(text = great_expectations$text) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, "(?i)^chapter [0-9ivxlc]")))
tidy_great_expectations <- great_expectations.tbl %>%
unnest_tokens(word, text)
tidy_great_expectations %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
tidy_great_expectations %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
tidy_great_expectations %>%
anti_join(stop_words) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100, colors=brewer.pal(8, "Dark2")))
# (b) Find the 10 most common bigrams in Great Expectations that do not include stop words.
tidy_great_expectations_bigram <- great_expectations.tbl %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2)
tidy_great_expectations_bigram
tidy_books <- books %>%
group_by(title) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]", ignore_case = TRUE)))) %>%
ungroup()  %>%
unnest_tokens(word, text)
books_sentiment <- tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(title, index = linenumber %/% 80, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
ggplot(books_sentiment, aes(index, sentiment, fill = title)) +
geom_bar(alpha = 0.8, stat = "identity", show.legend = FALSE) +
facet_wrap(~title, ncol = 3, scales = "free_x") +
theme(legend.position = "none") +
geom_smooth(span = .15)
books_sentiment <- tidy_books %>%
filter(word != "miss") %>%
inner_join(get_sentiments("bing")) %>%
count(title, index = linenumber %/% 80, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
ggplot(books_sentiment, aes(index, sentiment, fill = title)) +
geom_bar(alpha = 0.8, stat = "identity", show.legend = FALSE) +
facet_wrap(~title, ncol = 3, scales = "free_x") +
theme(legend.position = "none") +
geom_smooth(span = .15)
books_sentiment <- tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(title, index = linenumber %/% 80, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
ggplot(books_sentiment, aes(index, sentiment, fill = title)) +
geom_bar(alpha = 0.8, stat = "identity", show.legend = FALSE) +
facet_wrap(~title, ncol = 3, scales = "free_x") +
theme(legend.position = "none") +
geom_smooth(span = .15)
ploting("NASA")
ggplot(coefs.plot, aes(year, rd_budget_frac))+
geom_point()+
geom_line(aes(y=lower), color = "red", linetype = "dashed")+
geom_line(aes(y=upper), color = "red", linetype = "dashed")+
geom_smooth()
ploting("NSF")
ploting <- function(department){
coefs.plot=fed_rd.new[which(fed_rd.new$department==department),]
ggplot(coefs.plot, aes(year, rd_budget_frac))+
geom_point()+
geom_line(aes(y=lower), color = "red", linetype = "dashed")+
geom_line(aes(y=upper), color = "red", linetype = "dashed")+
geom_smooth()
}
ploting("NASA")
ploting("NSF")
ploting("DHS")
ploting("DOD")
ggplot(coefs.plot, aes(year, rd_budget_frac))+
geom_point()+
geom_line(aes(y=lower), color = "red", linetype = "dashed")+
geom_line(aes(y=upper), color = "red", linetype = "dashed")+
geom_line()
ggplot(coefs.plot, aes(year, rd_budget_frac))+
geom_point()+
geom_line(aes(y=lower), color = "red", linetype = "dashed")+
geom_line(aes(y=upper), color = "red", linetype = "dashed")+
geom_smooth()
ploting("NASA")
ploting("NSF")
ploting("DHS")
ploting("DOD")
untidy_migrant <- readxl::read_excel("UN_MigrantStockByOriginAndDestination_2015.xlsx", sheet = "Table 16", skip = 15)
untidy_migrant
untidy_migrant <- readxl::read_excel("UN_MigrantStockByOriginAndDestination_2015.xlsx", sheet = "Table 16", skip = 15)
head(untidy_migrant)
getwd()
